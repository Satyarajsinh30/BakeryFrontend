{"ast":null,"code":"// src/services/api.js\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\nimport { Navigate } from 'react-router-dom';\nconst api = axios.create({\n  baseURL: 'http://localhost:8080/',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n  // Replace with your API base URL\n});\n\n// Add a request interceptor\napi.interceptors.request.use(config => {\n  config.withCredentials = true;\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\napi.interceptors.response.use(response => response, async error => {\n  var _error$response, _error$response$data, _error$response2;\n  const originalRequest = error.config;\n\n  // Check for your specific error code/status\n  const isTokenExpired = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.code) === 'TOKEN_EXPIRED' ||\n  // If sending custom error code\n  ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 777; // If sending custom status code\n\n  // Only attempt refresh for token expiration\n  if (isTokenExpired && !originalRequest._retry) {\n    originalRequest._retry = true;\n    try {\n      const response = await axios.post('/refresh', {}, {\n        withCredentials: true\n      });\n      const {\n        token\n      } = response.data;\n      // localStorage.setItem('token', token);\n      // api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n      // Retry original request\n      // originalRequest.headers['Authorization'] = `Bearer ${token}`;\n      return api(originalRequest);\n    } catch (refreshError) {\n      // localStorage.removeItem('token');\n      Cookies.remove(\"accessToken\");\n      Cookies.remove(\"refreshToken\");\n      const navigate = Navigate();\n      navigate(\"/login\");\n      window.location.href = '/login';\n      return Promise.reject(refreshError);\n    }\n  }\n\n  // For all other errors, reject normally\n  return Promise.reject(error);\n});\napi.interceptors.response.use(response => response, error => {\n  // Handle errors globally\\\\\\\\\\\\\\\\\\\\\\\\\\\n  console.error('API Error:', error);\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","Cookies","Navigate","api","create","baseURL","headers","interceptors","request","use","config","withCredentials","error","Promise","reject","response","_error$response","_error$response$data","_error$response2","originalRequest","isTokenExpired","data","code","status","_retry","post","token","refreshError","remove","navigate","window","location","href","console"],"sources":["/home/satyaraj/Desktop/bakery-frontend/src/service/index.js"],"sourcesContent":["// src/services/api.js\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\nimport { Navigate } from 'react-router-dom';\n\nconst api = axios.create({\n  baseURL: 'http://localhost:8080/',\n  headers: {\n          'Content-Type': 'application/json'\n            }\n // Replace with your API base URL\n});\n\n// Add a request interceptor\napi.interceptors.request.use(\n  (config) => {\n    config.withCredentials = true;\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\napi.interceptors.response.use(\n  (response) => response,\n  async (error) => {\n    const originalRequest = error.config;\n    \n    // Check for your specific error code/status\n    const isTokenExpired = \n      error.response?.data?.code === 'TOKEN_EXPIRED' || // If sending custom error code\n      error.response?.status === 777;                   // If sending custom status code\n    \n    // Only attempt refresh for token expiration\n    if (isTokenExpired && !originalRequest._retry) {\n      originalRequest._retry = true;\n\n      try {\n        const response = await axios.post('/refresh', {}, {\n          withCredentials: true\n        });\n        \n        const { token } = response.data;\n        // localStorage.setItem('token', token);\n        // api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n        \n        // Retry original request\n        // originalRequest.headers['Authorization'] = `Bearer ${token}`;\n        return api(originalRequest);\n\n      } catch (refreshError) {\n        // localStorage.removeItem('token');\n        Cookies.remove(\"accessToken\");\n        Cookies.remove(\"refreshToken\");\n        const navigate = Navigate();\n        navigate(\"/login\")\n        window.location.href = '/login';\n        return Promise.reject(refreshError);\n      }\n    }\n\n    // For all other errors, reject normally\n    return Promise.reject(error);\n  }\n);\n\napi.interceptors.response.use(\n    (response) => response,\n    (error) => {\n      // Handle errors globally\\\\\\\\\\\\\\\\\\\\\\\\\\\n      console.error('API Error:', error);\n      return Promise.reject(error);\n    }\n  );\n\nexport default api;\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,QAAQ,QAAQ,kBAAkB;AAE3C,MAAMC,GAAG,GAAGH,KAAK,CAACI,MAAM,CAAC;EACvBC,OAAO,EAAE,wBAAwB;EACjCC,OAAO,EAAE;IACD,cAAc,EAAE;EACd;EACX;AACD,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACVA,MAAM,CAACC,eAAe,GAAG,IAAI;EAC7B,OAAOD,MAAM;AACf,CAAC,EACAE,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAEDT,GAAG,CAACI,YAAY,CAACQ,QAAQ,CAACN,GAAG,CAC1BM,QAAQ,IAAKA,QAAQ,EACtB,MAAOH,KAAK,IAAK;EAAA,IAAAI,eAAA,EAAAC,oBAAA,EAAAC,gBAAA;EACf,MAAMC,eAAe,GAAGP,KAAK,CAACF,MAAM;;EAEpC;EACA,MAAMU,cAAc,GAClB,EAAAJ,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBK,IAAI,cAAAJ,oBAAA,uBAApBA,oBAAA,CAAsBK,IAAI,MAAK,eAAe;EAAI;EAClD,EAAAJ,gBAAA,GAAAN,KAAK,CAACG,QAAQ,cAAAG,gBAAA,uBAAdA,gBAAA,CAAgBK,MAAM,MAAK,GAAG,CAAC,CAAmB;;EAEpD;EACA,IAAIH,cAAc,IAAI,CAACD,eAAe,CAACK,MAAM,EAAE;IAC7CL,eAAe,CAACK,MAAM,GAAG,IAAI;IAE7B,IAAI;MACF,MAAMT,QAAQ,GAAG,MAAMf,KAAK,CAACyB,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,EAAE;QAChDd,eAAe,EAAE;MACnB,CAAC,CAAC;MAEF,MAAM;QAAEe;MAAM,CAAC,GAAGX,QAAQ,CAACM,IAAI;MAC/B;MACA;;MAEA;MACA;MACA,OAAOlB,GAAG,CAACgB,eAAe,CAAC;IAE7B,CAAC,CAAC,OAAOQ,YAAY,EAAE;MACrB;MACA1B,OAAO,CAAC2B,MAAM,CAAC,aAAa,CAAC;MAC7B3B,OAAO,CAAC2B,MAAM,CAAC,cAAc,CAAC;MAC9B,MAAMC,QAAQ,GAAG3B,QAAQ,CAAC,CAAC;MAC3B2B,QAAQ,CAAC,QAAQ,CAAC;MAClBC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;MAC/B,OAAOnB,OAAO,CAACC,MAAM,CAACa,YAAY,CAAC;IACrC;EACF;;EAEA;EACA,OAAOd,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAEDT,GAAG,CAACI,YAAY,CAACQ,QAAQ,CAACN,GAAG,CACxBM,QAAQ,IAAKA,QAAQ,EACrBH,KAAK,IAAK;EACT;EACAqB,OAAO,CAACrB,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;EAClC,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAEH,eAAeT,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}