{"ast":null,"code":"// src/services/api.js\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\nimport { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nconst api = axios.create({\n  baseURL: 'http://localhost:8080/',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n  // Replace with your API base URL\n});\n\n// Add a request interceptor\napi.interceptors.request.use(config => {\n  config.withCredentials = true;\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\napi.interceptors.response.use(response => response, async error => {\n  var _error$response, _error$response$data;\n  const originalRequest = error.config;\n\n  // Check for your specific error code/status\n  // const isTokenExpired = \n  //   error.response?.data?.code === 'TOKEN_EXPIRED' || // If sending custom error code\n  //   error.response?.status === 777;                   // If sending custom status code\n\n  const isTokenExpired = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.status) === 777; // If sending custom status code\n  console.log(\"error... in interceptor\");\n  console.log(error.response.status);\n  console.log(isTokenExpired);\n  console.log(originalRequest);\n  console.log(originalRequest._retry);\n  // Only attempt refresh for token expiration\n  if (isTokenExpired && !originalRequest._retry) {\n    console.log(\"andar aa gaya me.....\");\n    originalRequest._retry = true;\n    Cookies.remove(\"accessToken\");\n    try {\n      const refreshToken = Cookies.get(\"refreshToken\");\n      console.log(refreshToken);\n      // const email = useSelector(state=>state.auth.user);\n      // console.log(email);\n      const data = {\n        refreshToken\n      };\n      console.log(data);\n      const response = await api.post('/refresh', data, {\n        withCredentials: true\n      });\n      console.log(\"/refresh has been hit...\");\n      const {\n        token\n      } = response.data;\n      console.log(response.Cookies);\n      // localStorage.setItem('token', token);\n      // api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n      // Retry original request\n      // originalRequest.headers['Authorization'] = `Bearer ${token}`;\n      return api(originalRequest);\n    } catch (refreshError) {\n      // localStorage.removeItem('token');\n      Cookies.remove(\"accessToken\");\n      Cookies.remove(\"refreshToken\");\n      const navigate = Navigate();\n      navigate(\"/login\");\n      // window.location.href = '/login';\n      return Promise.reject(refreshError);\n    }\n  }\n\n  // For all other errors, reject normally\n  return Promise.reject(error);\n});\n\n// api.interceptors.response.use(\n//     (response) => response,\n//     (error) => {\n//       // Handle errors globally\\\\\\\\\\\\\\\\\\\\\\\\\\\n//       console.error('API Error:', error);\n//       return Promise.reject(error);\n//     }\n//   );\n\nexport default api;","map":{"version":3,"names":["axios","Cookies","useSelector","Navigate","api","create","baseURL","headers","interceptors","request","use","config","withCredentials","error","Promise","reject","response","_error$response","_error$response$data","originalRequest","isTokenExpired","data","status","console","log","_retry","remove","refreshToken","get","post","token","refreshError","navigate"],"sources":["/home/satyaraj/Desktop/bakery-frontend/src/service/index.js"],"sourcesContent":["// src/services/api.js\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\nimport { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nconst api = axios.create({\n  baseURL: 'http://localhost:8080/',\n  headers: {\n          'Content-Type': 'application/json'\n            }\n // Replace with your API base URL\n});\n\n// Add a request interceptor\napi.interceptors.request.use(\n  (config) => {\n    config.withCredentials = true;\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\napi.interceptors.response.use(\n  (response) => response,\n  async (error) => {\n    const originalRequest = error.config;\n    \n    // Check for your specific error code/status\n    // const isTokenExpired = \n    //   error.response?.data?.code === 'TOKEN_EXPIRED' || // If sending custom error code\n    //   error.response?.status === 777;                   // If sending custom status code\n\n      const isTokenExpired = error.response?.data?.status === 777;// If sending custom status code\n      console.log(\"error... in interceptor\");\n      console.log(error.response.status);\n      console.log(isTokenExpired);\n      console.log(originalRequest);\n      console.log(originalRequest._retry);\n    // Only attempt refresh for token expiration\n    if (isTokenExpired && !originalRequest._retry) {\n      console.log(\"andar aa gaya me.....\")\n      originalRequest._retry = true;\n      Cookies.remove(\"accessToken\");\n      try {\n        const refreshToken = Cookies.get(\"refreshToken\");\n        console.log(refreshToken);\n        // const email = useSelector(state=>state.auth.user);\n        // console.log(email);\n        const data = {\n          refreshToken,\n        }\n        console.log(data);\n        const response = await api.post('/refresh', data, {\n          withCredentials: true\n        });\n        console.log(\"/refresh has been hit...\")\n        const { token } = response.data;\n        console.log(response.Cookies);\n        // localStorage.setItem('token', token);\n        // api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n        \n        // Retry original request\n        // originalRequest.headers['Authorization'] = `Bearer ${token}`;\n        return api(originalRequest);\n\n      } catch (refreshError) {\n        // localStorage.removeItem('token');\n        Cookies.remove(\"accessToken\");\n        Cookies.remove(\"refreshToken\");\n        const navigate = Navigate();\n        navigate(\"/login\");\n        // window.location.href = '/login';\n        return Promise.reject(refreshError);\n      }\n    }\n\n    // For all other errors, reject normally\n    return Promise.reject(error);\n  }\n);\n\n// api.interceptors.response.use(\n//     (response) => response,\n//     (error) => {\n//       // Handle errors globally\\\\\\\\\\\\\\\\\\\\\\\\\\\n//       console.error('API Error:', error);\n//       return Promise.reject(error);\n//     }\n//   );\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}