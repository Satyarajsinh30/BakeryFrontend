{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport Cookies from \"js-cookie\";\nimport api from \"../service\";\nconst initialState = {\n  user: {\n    id: \"\",\n    email: \"\"\n  },\n  isAuthenticated: false\n};\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: initialState,\n  reducers: {\n    login(state, actions) {\n      console.log(\"inside login...\");\n      state.isAuthenticated = true;\n      state.user = {\n        id: actions.payload.id,\n        email: actions.payload.email\n      };\n    },\n    async logout(state) {\n      // try{\n      // const response = await api.post(\"/logout\",{email});\n      // console.log(response.data.message);\n      Cookies.remove(\"accessToken\", {\n        path: \"/\"\n      });\n      Cookies.remove(\"refreshToken\", {\n        path: \"/\"\n      });\n      state.isAuthenticated = false;\n      state.user = {\n        id: \"\",\n        email: \"\"\n      };\n      // }\n      // catch(e){\n      //     Cookies.remove(\"accessToken\",{path:\"/\"});\n      //     Cookies.remove(\"refreshToken\",{path:\"/\"});\n      //     state.isAuthenticated = false;\n      //     state.user = {\n      //         id:\"\",\n      //         email:\"\"\n      //     };\n      // }\n    }\n  }\n});\nexport const authActions = authSlice.actions;\nexport default authSlice;","map":{"version":3,"names":["createSlice","Cookies","api","initialState","user","id","email","isAuthenticated","authSlice","name","reducers","login","state","actions","console","log","payload","logout","remove","path","authActions"],"sources":["/home/satyaraj/Desktop/bakery-frontend/src/store/authSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport Cookies from \"js-cookie\";\nimport api from \"../service\";\nconst initialState = {\n    user: {\n        id:\"\",\n        email:\"\"\n    },\n    isAuthenticated:false\n}\n\nconst authSlice = createSlice({\n    name:\"auth\",\n    initialState:initialState,\n    reducers:{\n        login(state,actions){\n            console.log(\"inside login...\");\n            state.isAuthenticated = true;\n            state.user = {\n                id: actions.payload.id,\n                email: actions.payload.email\n            }\n        },\n        async logout(state){\n            // try{\n                // const response = await api.post(\"/logout\",{email});\n                // console.log(response.data.message);\n                Cookies.remove(\"accessToken\",{path:\"/\"});\n                Cookies.remove(\"refreshToken\",{path:\"/\"});\n                state.isAuthenticated = false;\n                state.user = {\n                    id:\"\",\n                    email:\"\"\n                };\n            // }\n            // catch(e){\n            //     Cookies.remove(\"accessToken\",{path:\"/\"});\n            //     Cookies.remove(\"refreshToken\",{path:\"/\"});\n            //     state.isAuthenticated = false;\n            //     state.user = {\n            //         id:\"\",\n            //         email:\"\"\n            //     };\n            // }\n        }\n    }\n})\n\nexport const authActions = authSlice.actions;\nexport default authSlice;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,GAAG,MAAM,YAAY;AAC5B,MAAMC,YAAY,GAAG;EACjBC,IAAI,EAAE;IACFC,EAAE,EAAC,EAAE;IACLC,KAAK,EAAC;EACV,CAAC;EACDC,eAAe,EAAC;AACpB,CAAC;AAED,MAAMC,SAAS,GAAGR,WAAW,CAAC;EAC1BS,IAAI,EAAC,MAAM;EACXN,YAAY,EAACA,YAAY;EACzBO,QAAQ,EAAC;IACLC,KAAKA,CAACC,KAAK,EAACC,OAAO,EAAC;MAChBC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;MAC9BH,KAAK,CAACL,eAAe,GAAG,IAAI;MAC5BK,KAAK,CAACR,IAAI,GAAG;QACTC,EAAE,EAAEQ,OAAO,CAACG,OAAO,CAACX,EAAE;QACtBC,KAAK,EAAEO,OAAO,CAACG,OAAO,CAACV;MAC3B,CAAC;IACL,CAAC;IACD,MAAMW,MAAMA,CAACL,KAAK,EAAC;MACf;MACI;MACA;MACAX,OAAO,CAACiB,MAAM,CAAC,aAAa,EAAC;QAACC,IAAI,EAAC;MAAG,CAAC,CAAC;MACxClB,OAAO,CAACiB,MAAM,CAAC,cAAc,EAAC;QAACC,IAAI,EAAC;MAAG,CAAC,CAAC;MACzCP,KAAK,CAACL,eAAe,GAAG,KAAK;MAC7BK,KAAK,CAACR,IAAI,GAAG;QACTC,EAAE,EAAC,EAAE;QACLC,KAAK,EAAC;MACV,CAAC;MACL;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACJ;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMc,WAAW,GAAGZ,SAAS,CAACK,OAAO;AAC5C,eAAeL,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}