{"ast":null,"code":"var _jsxFileName = \"/home/satyaraj/Desktop/bakery-frontend/src/layout/Protected.jsx\",\n  _s = $RefreshSig$();\nimport { useSelector } from \"react-redux\";\nimport { Navigate, Outlet } from \"react-router-dom\";\nimport Navbar from \"../components/Navbar\";\nimport { useDispatch } from \"react-redux\";\n// import { authActions,logout } from \"../store/authSlice\";\n// import { useEffect } from \"react\";\n// import axios from \"axios\";\n// import { toast } from \"react-toastify\";\n// import api from \"../service\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ProtectedPages() {\n  _s();\n  const dispatch = useDispatch();\n  const email = useSelector(state => state.auth.user.email);\n  // useEffect(() => {\n  //   const authenticateUser = async () => {\n  //     try {\n  //       console.log(\"protected route render...\");\n  //         axios.defaults.withCredentials = true;\n  //         const response = await api.get(\"/authenticate\", {\n  //           withCredentials: true,\n  //         });\n  //         console.log(response);\n  //         console.log(\"setting login state again\");\n  //         dispatch(authActions.login({\n  //           id:response.data.id,\n  //           email:response.data.email,\n  //       }));\n\n  //     } catch (error) {\n  //       toast.error(\"Session expired please login again\");\n  //       console.log(\"areee yarrrr.... inside protected route\"+email);\n  //       dispatch(logout(email));\n  //     }\n  //   };\n\n  //   authenticateUser();\n  // });\n\n  console.log(\"checking state\");\n  const isAuthenticated = useSelector(state => state.auth.isAuthenticated);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), isAuthenticated ? /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 28\n    }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 39\n    }, this)]\n  }, void 0, true);\n}\n_s(ProtectedPages, \"t06lHE3zM3/dLGwtkdQMr3X4eWw=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = ProtectedPages;\nexport default ProtectedPages;\nvar _c;\n$RefreshReg$(_c, \"ProtectedPages\");","map":{"version":3,"names":["useSelector","Navigate","Outlet","Navbar","useDispatch","jsxDEV","_jsxDEV","Fragment","_Fragment","ProtectedPages","_s","dispatch","email","state","auth","user","console","log","isAuthenticated","children","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["/home/satyaraj/Desktop/bakery-frontend/src/layout/Protected.jsx"],"sourcesContent":["import { useSelector } from \"react-redux\";\nimport { Navigate, Outlet } from \"react-router-dom\";\nimport Navbar from \"../components/Navbar\";\nimport { useDispatch } from \"react-redux\";\n// import { authActions,logout } from \"../store/authSlice\";\n// import { useEffect } from \"react\";\n// import axios from \"axios\";\n// import { toast } from \"react-toastify\";\n// import api from \"../service\";\n\nfunction ProtectedPages(){\n\n    const dispatch = useDispatch();\n    const email = useSelector(state=>state.auth.user.email);\n    // useEffect(() => {\n    //   const authenticateUser = async () => {\n    //     try {\n    //       console.log(\"protected route render...\");\n    //         axios.defaults.withCredentials = true;\n    //         const response = await api.get(\"/authenticate\", {\n    //           withCredentials: true,\n    //         });\n    //         console.log(response);\n    //         console.log(\"setting login state again\");\n    //         dispatch(authActions.login({\n    //           id:response.data.id,\n    //           email:response.data.email,\n    //       }));\n          \n    //     } catch (error) {\n    //       toast.error(\"Session expired please login again\");\n    //       console.log(\"areee yarrrr.... inside protected route\"+email);\n    //       dispatch(logout(email));\n    //     }\n    //   };\n  \n    //   authenticateUser();\n    // });\n\n    console.log(\"checking state\");\n    const isAuthenticated = useSelector((state)=>state.auth.isAuthenticated);\n\nreturn(\n    <>\n        <Navbar />\n\n        {isAuthenticated ? <Outlet />:<Navigate to=\"/login\" />}\n    </>\n\n);\n}\n\nexport default ProtectedPages;"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,aAAa;AACzC,SAASC,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;AACnD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,WAAW,QAAQ,aAAa;AACzC;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEA,SAASC,cAAcA,CAAA,EAAE;EAAAC,EAAA;EAErB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAMQ,KAAK,GAAGZ,WAAW,CAACa,KAAK,IAAEA,KAAK,CAACC,IAAI,CAACC,IAAI,CAACH,KAAK,CAAC;EACvD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEAI,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;EAC7B,MAAMC,eAAe,GAAGlB,WAAW,CAAEa,KAAK,IAAGA,KAAK,CAACC,IAAI,CAACI,eAAe,CAAC;EAE5E,oBACIZ,OAAA,CAAAE,SAAA;IAAAW,QAAA,gBACIb,OAAA,CAACH,MAAM;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAETL,eAAe,gBAAGZ,OAAA,CAACJ,MAAM;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAACjB,OAAA,CAACL,QAAQ;MAACuB,EAAE,EAAC;IAAQ;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACxD,CAAC;AAGP;AAACb,EAAA,CAxCQD,cAAc;EAAA,QAEFL,WAAW,EACdJ,WAAW,EA2BDA,WAAW;AAAA;AAAAyB,EAAA,GA9B9BhB,cAAc;AA0CvB,eAAeA,cAAc;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}