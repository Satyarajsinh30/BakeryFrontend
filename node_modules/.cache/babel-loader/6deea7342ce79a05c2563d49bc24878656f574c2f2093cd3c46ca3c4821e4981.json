{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport Cookies from \"js-cookie\";\nimport api from \"../service\";\nconst initialState = {\n  user: null,\n  isAuthenticated: false\n};\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: initialState,\n  reducers: {\n    login(state, actions) {\n      console.log(\"inside login...\");\n      state.isAuthenticated = true;\n      state.user = actions.payload;\n    },\n    async logout(state) {\n      const refreshToken = Cookies.get(\"refreshToken\");\n      try {\n        const response = await api.post(\"/logout\", {\n          refreshToken: refreshToken\n        });\n        console.log(response.data.message);\n        Cookies.remove(\"accessToken\", {\n          path: \"/\"\n        });\n        Cookies.remove(\"refreshToken\", {\n          path: \"/\"\n        });\n        state.isAuthenticated = false;\n        state.user = null;\n      } catch (e) {\n        Cookies.remove(\"accessToken\", {\n          path: \"/\"\n        });\n        Cookies.remove(\"refreshToken\", {\n          path: \"/\"\n        });\n        state.isAuthenticated = false;\n        state.user = null;\n      }\n    }\n  }\n});\nexport const authActions = authSlice.actions;\nexport default authSlice;","map":{"version":3,"names":["createSlice","Cookies","api","initialState","user","isAuthenticated","authSlice","name","reducers","login","state","actions","console","log","payload","logout","refreshToken","get","response","post","data","message","remove","path","e","authActions"],"sources":["/home/satyaraj/Desktop/bakery-frontend/src/store/authSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport Cookies from \"js-cookie\";\nimport api from \"../service\";\nconst initialState = {\n    user: null,\n    isAuthenticated:false\n}\n\nconst authSlice = createSlice({\n    name:\"auth\",\n    initialState:initialState,\n    reducers:{\n        login(state,actions){\n            console.log(\"inside login...\");\n            state.isAuthenticated = true;\n            state.user = actions.payload;\n        },\n        async logout(state){\n            const refreshToken = Cookies.get(\"refreshToken\");\n            try{\n                const response = await api.post(\"/logout\",{refreshToken:refreshToken})\n                console.log(response.data.message);\n                Cookies.remove(\"accessToken\",{path:\"/\"});\n                Cookies.remove(\"refreshToken\",{path:\"/\"});\n                state.isAuthenticated = false;\n                state.user = null;\n            }\n            catch(e){\n                Cookies.remove(\"accessToken\",{path:\"/\"});\n                Cookies.remove(\"refreshToken\",{path:\"/\"});\n                state.isAuthenticated = false;\n                state.user = null;\n            }\n        }\n    }\n})\n\nexport const authActions = authSlice.actions;\nexport default authSlice;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,GAAG,MAAM,YAAY;AAC5B,MAAMC,YAAY,GAAG;EACjBC,IAAI,EAAE,IAAI;EACVC,eAAe,EAAC;AACpB,CAAC;AAED,MAAMC,SAAS,GAAGN,WAAW,CAAC;EAC1BO,IAAI,EAAC,MAAM;EACXJ,YAAY,EAACA,YAAY;EACzBK,QAAQ,EAAC;IACLC,KAAKA,CAACC,KAAK,EAACC,OAAO,EAAC;MAChBC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;MAC9BH,KAAK,CAACL,eAAe,GAAG,IAAI;MAC5BK,KAAK,CAACN,IAAI,GAAGO,OAAO,CAACG,OAAO;IAChC,CAAC;IACD,MAAMC,MAAMA,CAACL,KAAK,EAAC;MACf,MAAMM,YAAY,GAAGf,OAAO,CAACgB,GAAG,CAAC,cAAc,CAAC;MAChD,IAAG;QACC,MAAMC,QAAQ,GAAG,MAAMhB,GAAG,CAACiB,IAAI,CAAC,SAAS,EAAC;UAACH,YAAY,EAACA;QAAY,CAAC,CAAC;QACtEJ,OAAO,CAACC,GAAG,CAACK,QAAQ,CAACE,IAAI,CAACC,OAAO,CAAC;QAClCpB,OAAO,CAACqB,MAAM,CAAC,aAAa,EAAC;UAACC,IAAI,EAAC;QAAG,CAAC,CAAC;QACxCtB,OAAO,CAACqB,MAAM,CAAC,cAAc,EAAC;UAACC,IAAI,EAAC;QAAG,CAAC,CAAC;QACzCb,KAAK,CAACL,eAAe,GAAG,KAAK;QAC7BK,KAAK,CAACN,IAAI,GAAG,IAAI;MACrB,CAAC,CACD,OAAMoB,CAAC,EAAC;QACJvB,OAAO,CAACqB,MAAM,CAAC,aAAa,EAAC;UAACC,IAAI,EAAC;QAAG,CAAC,CAAC;QACxCtB,OAAO,CAACqB,MAAM,CAAC,cAAc,EAAC;UAACC,IAAI,EAAC;QAAG,CAAC,CAAC;QACzCb,KAAK,CAACL,eAAe,GAAG,KAAK;QAC7BK,KAAK,CAACN,IAAI,GAAG,IAAI;MACrB;IACJ;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMqB,WAAW,GAAGnB,SAAS,CAACK,OAAO;AAC5C,eAAeL,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}